"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function matchAlways(value) {
    return true;
}
function matchAlwaysArray(values) {
    return true;
}
function toBoolMap(values) {
    const map = {};
    for (const value of values) {
        map[value] = true;
    }
    return map;
}
class ItemFilterImpl {
    constructor(filter) {
        this.matchTags = matchAlwaysArray;
        this.matchType = matchAlways;
        this.matchRef = matchAlways;
        if (filter.refs) {
            const filterRefs = toBoolMap(filter.refs);
            this.matchRef = (ref) => !!filterRefs[ref];
        }
        if (filter.types) {
            const filterTypes = toBoolMap(filter.types);
            this.matchType = (type) => !!filterTypes[type];
        }
        if (filter.tags && filter.tags.values) {
            const filterTags = toBoolMap(filter.tags.values);
            this.matchTags = (tags) => {
                for (const tag of tags) {
                    if (filterTags[tag])
                        return true;
                }
                return false;
            };
        }
    }
    match(entity) {
        return this.matchType(entity.type) && this.matchRef(entity.ref); // @todo: support tags
    }
}
exports.default = ItemFilterImpl;
//# sourceMappingURL=ItemFilterImpl.js.map