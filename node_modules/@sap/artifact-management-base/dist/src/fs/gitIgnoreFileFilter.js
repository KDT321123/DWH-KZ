"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ignore_1 = __importDefault(require("ignore"));
const parse_gitignore_1 = __importDefault(require("parse-gitignore"));
const path_1 = __importDefault(require("path"));
const FileSystemFactory_1 = require("../commons/FileSystemFactory");
async function gitIgnoreFileFilter(projectBasePath) {
    const fs = FileSystemFactory_1.FileSystemFactory.getFileSystem(projectBasePath);
    let gitIgnoreText = '';
    if (await fs.fileExists('.gitignore')) {
        gitIgnoreText = await fs.readTextFile('.gitignore');
    }
    const gitIgnore = parse_gitignore_1.default(gitIgnoreText);
    const ig = ignore_1.default().add(gitIgnore);
    ig.add('.git/');
    return (path, isDir) => {
        const relativePath = path_1.default.relative(projectBasePath, path);
        if (isDir) {
            return !ig.ignores(path_1.default.join(relativePath, '*')); // workaround to exclude the whole directory
        }
        else {
            return !ig.ignores(relativePath);
        }
    };
}
exports.default = gitIgnoreFileFilter;
//# sourceMappingURL=gitIgnoreFileFilter.js.map