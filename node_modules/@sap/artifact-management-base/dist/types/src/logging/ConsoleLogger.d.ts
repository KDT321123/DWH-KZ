import { IVSCodeExtLogger } from '@vscode-logging/types';
export declare type LogLevel = 'off' | 'fatal' | 'error' | 'warn' | 'info' | 'debug' | 'trace';
export declare function getLogLevelType(level: string): LogLevel;
/**
 * Empty Implementation of the Logger in case none is provided via Dependency Injection.
 * An alternative implementation could log to the console or provide another (real) implementation.
 *
 * @type {IChildLogger}
 */
declare class ConsoleLogger implements IVSCodeExtLogger {
    private logLevel;
    constructor();
    private isEnabled;
    fatal(msg: string, ...args: any[]): void;
    error(msg: string, ...args: any[]): void;
    warn(msg: string, ...args: any[]): void;
    info(msg: string, ...args: any[]): void;
    debug(msg: string, ...args: any[]): void;
    trace(msg: string, ...args: any[]): void;
    changeLevel(newLevel: LogLevel): void;
    changeSourceLocationTracking(newSourceLocation: boolean): void;
    getChildLogger(): this;
}
export declare const consoleLogger: ConsoleLogger;
export {};
