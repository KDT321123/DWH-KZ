import { Service } from '../cp/Service';
import { MtaModuleRequires, MtaModule } from './Module';
import { ModuleType } from '../definitions/ModuleType';
import { ModuleGeneratorContext } from './ModuleGeneratorContext';
import { KeyIn } from '../util/Types';
export default interface ModuleManifestGenerator {
    getType: () => KeyIn<typeof ModuleType>;
    beforeBuildCommands(context?: ModuleGeneratorContext): Promise<string[]>;
    provideResources: (context: ModuleGeneratorContext) => Promise<Service[]>;
    getModuleManifest: (context: ModuleGeneratorContext, useHeadlessGenerator?: boolean) => Promise<MtaModule | null>;
    requires: (context: ModuleGeneratorContext) => MtaModuleRequires[];
}
