import ProjectFileSystem from '../commons/ProjectFileSystem';
export declare type CDSDefinition = {
    kind: string;
    name: string;
    '@path': string;
    '$location': {
        file: string;
    };
    query?: any;
    elements?: any;
    _service?: any;
    '@cds.persistence.skip'?: boolean;
    associations?: any;
    compositions?: any;
    '@PersonalDataManagerService'?: boolean;
};
export declare type LoadOptions = {
    flavor: 'xtended' | 'inferred';
};
export default class CapApi {
    fs: ProjectFileSystem;
    paths: string[];
    csn: any;
    static cds: any;
    constructor(fs: ProjectFileSystem, paths: string[]);
    cds(): Promise<any>;
    load(options?: LoadOptions): Promise<void>;
    services(): CDSDefinition[];
    entities(): CDSDefinition[];
    edmx(service: string): Promise<string>;
}
