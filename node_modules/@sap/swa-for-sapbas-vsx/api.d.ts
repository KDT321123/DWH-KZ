/**
 * Class SWATracker
 * In charge of all usage analitycs API
 */
export class SWATracker {
    /**
     * constructor
     * @param vsxPublisher should be publisher in package.json
     * @param vsxPackageName should be extension package.json name
     * @param errorListener callback for error, one such callback for all the errors we receive via all the track methods err can be string (err.message) or number (response.statusCode)
     */
    constructor(vsxPublisher : string, vsxPackageName : string, errorListener? : (err : string|number) => void);
    /**
     * Send event to SWA for tracking
     * @param eventType 
     * @param {string[]} [customEvents] Optional, can accept up to 4, any more will be ignored
     * @param {number[]} [numericEvents] Optional, can accept up to 2, any more will be ignored
     */
    public track(eventType : string, customEvents? : string[], numericEvents? : number[]) : void;
    /**
     * Set exteral target for reporting
     * @param targetUrl should be external target URL
     * @param targetToken should be external target token
     */
    public setTarget(targetUrl : string, targetToken : string) : void;
}

/**
* Constant for enable analytics property name
*/
export const ANALYTICS_ENABLED_SETTING_NAME: string
