// Type definitions for SAP HANA tooling feature toggles

// Note that ES6 modules cannot directly export class objects.
// This file should be imported using the CommonJS-style:
//   import x = require('[~THE MODULE~]');
//
// Alternatively, if --allowSyntheticDefaultImports or
// --esModuleInterop is turned on, this file can also be
// imported as a default import:
//   import x from '[~THE MODULE~]';
//
// Refer to the TypeScript documentation at
// https://www.typescriptlang.org/docs/handbook/modules.html#export--and-import--require
// to understand common workarounds for this limitation of ES6 modules.

 export = FeatureToggleInstance;

 declare class FeatureToggleInstance {

    /**
	 * Create a FeatureToggleInstance (with extension Name - can be empty if no VsCode commands are used).
	 *
	 * @param {string} featureListLocation
	 * @param {string} extensionName (optional)
     * @param {} vscode - the vscode API. If none is provided this library will check if vscode is available and populate it itself. 
     * If no vscode is found vscode related functionalities can not be used. (optional)
	 */
    constructor(featureListLocation: string, extensionName?: string, vscode?: any);

    /**
	 * Check if the feature 'featureToggleName' is enabled by the extension itself. If not check if it is enabled by QA Extension.
	 *
	 * @param {string} featureToggleName
	 * @returns {Boolean}
	 */
    isFeatureEnabled( featureToggleName: string ): boolean;

    /**
     * Check if the command 'featureToggleName' is enabled by the extension itself. If not check if it is enabled by QA Extension.
     * Additionally this function will set the 'extensionName:featureToggleName' context variable of vscode which can be used to hide / show the command.
     *
     * Note: Function only useable in VSCODE Extension contexts when relating to commands. Use 'isFeatureEnabled' if you don't have a command.
     *
     * @param {string} featureToggleName
     * @returns {Boolean}
     */
    isCommandEnabled( featureToggleName: string ): boolean;
 }