"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MDK_TaskUI_PATTERNS = void 0;
const MdkItemReader_1 = __importDefault(require("./MdkItemReader"));
const artifact_management_base_1 = require("@sap/artifact-management-base");
exports.MDK_TaskUI_PATTERNS = ['.project.json'];
class MDKTaskUIReader extends MdkItemReader_1.default {
    constructor() {
        super(...arguments);
        this.defaultType = artifact_management_base_1.ItemType.MDKTaskUI;
        this.types = [this.defaultType];
        this.tags = [artifact_management_base_1.Tag.Item, artifact_management_base_1.Tag.TaskUI, artifact_management_base_1.Tag.MDK];
        this.matchConditions = {
            requiredFilePatterns: exports.MDK_TaskUI_PATTERNS,
            rule: async (context) => {
                if (context.matchType !== 'required') {
                    return false;
                }
                const projectJson = await context.fs.readJson('.project.json');
                if (projectJson && projectJson.LCAP && projectJson.LCAP.UserTask) {
                    return true;
                }
                return false;
            },
        };
    }
    async itemParser(app, idx) {
        if (!this.readUtils) {
            throw new Error(this.E_INVAL_INVO);
        }
        const [file, type] = this.getFileAndType(idx);
        const relativePath = this.readUtils.fs.relativeToRoot();
        const name = this.pathToName(relativePath);
        const ref = this.readUtils.fs.relativeToRoot(file);
        const path = this.readUtils.fs.relativeToRoot('Web/MDKModule');
        return {
            type, ref, name, path, tags: this.tags,
        };
    }
}
exports.default = MDKTaskUIReader;
//# sourceMappingURL=MDKTaskUIReader.js.map