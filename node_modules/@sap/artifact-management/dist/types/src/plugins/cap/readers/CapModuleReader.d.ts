import { ProjectFileSystem, Item, ModuleReader, ModuleType, ModuleData, ProjectEntityReaderReadOptions, DetectionMechanism, KeyIn, ItemDetailInfoOptions } from '@sap/artifact-management-base';
export default class CapModuleReader extends ModuleReader {
    getType(): KeyIn<typeof ModuleType>;
    getDetectionMechanism(): DetectionMechanism;
    matchConditions: {
        requiredFilePatterns: string[];
    };
    itemTags: string[];
    itemReaders: ({
        matchConditions: {
            requiredFilePatterns: string[];
        };
        types: string[];
        tags: string[];
        read: (options: ProjectEntityReaderReadOptions) => Promise<Item[]>;
        detailInfo: (fs: ProjectFileSystem, ref: string, options?: ItemDetailInfoOptions | undefined) => Promise<Item | undefined>;
    } | {
        matchConditions: {
            requiredFilePatterns: string[];
        };
        types: string[];
        tags: string[];
        read: (options: ProjectEntityReaderReadOptions) => Promise<Item[]>;
        detailInfo?: undefined;
    })[];
    tags: string[];
    getCapModulesFolderMap(fs: ProjectFileSystem): Promise<any>;
    getMappedFolderType(folderPath: string, fs: ProjectFileSystem): Promise<string | undefined>;
    read({ fs }: {
        fs: ProjectFileSystem;
    }): Promise<ModuleData | undefined>;
    provideFromCds({ fs }: ProjectEntityReaderReadOptions): Promise<Item[]>;
    detailInfo(fs: ProjectFileSystem, ref: string, options?: ItemDetailInfoOptions): Promise<Item | undefined>;
    readCSV({ fs, matchedFiles }: ProjectEntityReaderReadOptions): Promise<Item[]>;
    private getExternalServicePaths;
    private getRef;
    /**
     * Get the service ref from service object.
     * The method parses the service object and
     * creates a ref following the same step as done be CDS.
     * As a result, the value will match the service endpoint value generated by CDS.
    */
    private getServiceRef;
    /**
     * Since the path would be relative to the root, in case of win OS,
     * we need to find the correct root drive and we need to prefix the path with the correct root drive (C:, D: etc.)
     */
    private getLocationForWindows;
}
