/// <reference types="node" />
import { ItemFilter, Item, FileSystemWatchManager } from '@sap/artifact-management-base';
import { ProjectInstance } from './ProjectInstance';
import { EventEmitter } from 'events';
import ItemWatcherApi from './ItemWatcherApi';
declare interface ItemWatcher {
    on(event: 'updated', listener: (event: string[], file: string[]) => void): this;
    on(event: 'destroy', listener: (obj: ItemWatcher) => void): this;
}
declare class ItemWatcher extends EventEmitter implements ItemWatcherApi {
    private project;
    private watchManager;
    private filter?;
    constructor(project: ProjectInstance, watchManager: FileSystemWatchManager, filter?: ItemFilter | undefined);
    destroy(): Promise<void>;
    readItems(): Promise<Item[]>;
}
export default ItemWatcher;
