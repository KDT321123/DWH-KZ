import { ProjectManifestGenerator, Plugin, ProjectType, ModuleType, ModuleManifestGenerator, ProjectReader, ModuleReader, ModuleAutoBuilder, ProjectRunner, ItemType, ItemReader, KeyIn, RunUI } from '@sap/artifact-management-base';
/**
 * Central entrypoint for project and module specific implementations ("plugins").
 *
 * @todo: Later this needs to be able to be really plugable,
 *        meaning it should be possible to add plugins without changing this implementation.
 */
declare class PluginFactory {
    private plugins;
    private projectReaders;
    private moduleReaders;
    private itemReaders;
    private projectManifestGenerators;
    private moduleManifestGenerators;
    private projectRunners;
    private moduleRunners;
    private moduleBuilders;
    getPluginsDefinition(): Map<string, Plugin>;
    getProjectReaders(readModuleAsProject: boolean): ProjectReader[];
    getProjectWrappers(): ProjectReader[];
    getProjectReaderFor(projectType: KeyIn<typeof ProjectType>, readModuleAsProject?: boolean): ProjectReader;
    getModuleReaders(): ModuleReader[];
    getModuleReaderFor(moduleType: KeyIn<typeof ModuleType>): ModuleReader;
    getItemReaderFor(itemType: KeyIn<typeof ItemType>): ItemReader;
    addModuleReader(reader: ModuleReader): void;
    getModuleManifestGeneratorFor(moduleType: KeyIn<typeof ModuleType>): ModuleManifestGenerator;
    loadModuleManifestGenerators(): void;
    getProjectGenerators(): ProjectManifestGenerator[];
    loadProjectGenerators(): void;
    getProjectGeneratorFor(projectType: KeyIn<typeof ProjectType>): ProjectManifestGenerator;
    loadPlugins(): void;
    getProjectRunnerFor(projectType: KeyIn<typeof ProjectType>): ProjectRunner;
    getModuleRunnerFor(moduleType: KeyIn<typeof ModuleType>): RunUI;
    private loadModuleRunners;
    getModuleBuilderFor(moduleType: KeyIn<typeof ModuleType>): ModuleAutoBuilder;
    private loadModuleBuilders;
    private loadProjectRunners;
    private loadProjectReaders;
    private loadModuleReaders;
    private loadItemReaders;
    private sortProjectReaders;
    private sortModuleReaders;
}
declare const _default: PluginFactory;
export default _default;
