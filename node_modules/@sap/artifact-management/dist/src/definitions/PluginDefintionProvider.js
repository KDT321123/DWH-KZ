"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PLUGIN = void 0;
const cap_1 = __importDefault(require("../plugins/cap"));
const xsuaa_1 = __importDefault(require("../plugins/xsuaa"));
const ui5_1 = __importDefault(require("../plugins/ui5"));
const artifact_management_mdkplugin_1 = __importDefault(require("@sap/artifact-management-mdkplugin"));
exports.PLUGIN = {
    CAP: 'cap',
    XSUAA: 'xsuaa',
    UI5: 'ui5',
    MDK: 'mdk',
};
/**
 * Central entrypoint for project and module specific implementations ("plugins").
 *
 * @todo: Later this needs to be able to be really plugable,
 *        meaning it should be possible to add plugins without changing this implementation.
 */
class PluginDefintionProvider {
    getDefintion(pluginName) {
        switch (pluginName) {
            case exports.PLUGIN.CAP:
                return cap_1.default;
            case exports.PLUGIN.XSUAA:
                return xsuaa_1.default;
            case exports.PLUGIN.UI5:
                return ui5_1.default;
            case exports.PLUGIN.MDK:
                return artifact_management_mdkplugin_1.default;
            default:
                throw `Plugin ${pluginName} is not supported`;
        }
    }
}
exports.default = new PluginDefintionProvider();
//# sourceMappingURL=PluginDefintionProvider.js.map