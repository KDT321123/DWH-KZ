"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceInfo = void 0;
const artifact_management_base_1 = require("@sap/artifact-management-base");
class ServiceInfo {
    static async list(projectApi) {
        const projectInfo = await projectApi.read();
        let services = await projectApi.readItems({ types: [artifact_management_base_1.ItemType.CAPService] });
        const serviceInfos = [];
        services = services.sort((a, b) => {
            /* istanbul ignore if */
            if (a.name > b.name)
                return 1;
            /* istanbul ignore else */
            if (a.name < b.name)
                return -1;
            /* istanbul ignore next */
            return 0;
        });
        for (const service of services) {
            const edmxPath = `${service.name}.edmx`;
            serviceInfos.push({
                name: service.name,
                sourcePath: service.path,
                path: service.ref,
                entryPath: service.ref,
                destination: `${projectInfo === null || projectInfo === void 0 ? void 0 : projectInfo.prefix}-app-srv`,
                edmxPath,
            });
        }
        return serviceInfos;
    }
    static async getEdmx(path, name) {
        const capApi = new artifact_management_base_1.CapApi(artifact_management_base_1.FileSystemFactory.getFileSystem(path), ['.']);
        return await capApi.edmx(name);
    }
}
exports.ServiceInfo = ServiceInfo;
/** @deprecated: Use ServiceInfo.list() and ServiceInfo.getEdmx() */
async function buildServiceInfo(projectApi, targetPath) {
    const serviceInfos = await ServiceInfo.list(projectApi);
    const targetFS = artifact_management_base_1.FileSystemFactory.getFileSystem(targetPath);
    for (const serviceInfo of serviceInfos) {
        const edmx = await ServiceInfo.getEdmx(projectApi.fs().path(serviceInfo.sourcePath), serviceInfo.name);
        targetFS.writeTextFile(serviceInfo.edmxPath, edmx);
    }
    await targetFS.writeJSON('services.json', serviceInfos);
}
exports.default = buildServiceInfo;
//# sourceMappingURL=buildServiceInfo.js.map