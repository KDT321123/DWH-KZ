"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cli = void 0;
const yargs = require("yargs");
const buildServiceInfo_1 = require("./buildServiceInfo");
const fs_1 = __importDefault(require("fs"));
const ProjectImpl_1 = __importDefault(require("./ProjectImpl"));
// Redirect all other output to stderr to ensure that stdout contains only the JSON result for the "list" and "get-edmx" calls
/* istanbul ignore next */
// @ts-ignore
process.stdout.write = (...args) => process.stderr.write(...args);
const stdout = fs_1.default.createWriteStream(null, { fd: 1 });
async function cli() {
    yargs
        .scriptName('service-util')
        .command('list [path]', 'Show mta.yaml', {}, async (argv) => {
        /* istanbul ignore next */
        const path = argv.path || '.';
        const projectApi = new ProjectImpl_1.default(path);
        stdout.write(JSON.stringify(await buildServiceInfo_1.ServiceInfo.list(projectApi), null, 2));
    })
        .command('get-edmx path service', 'Show project items', {}, async (argv) => {
        const path = argv.path;
        const service = argv.service;
        const edmx = await buildServiceInfo_1.ServiceInfo.getEdmx(path, service);
        stdout.write(edmx);
    })
        .help()
        .strict()
        .demandCommand()
        .argv;
}
exports.cli = cli;
cli();
//# sourceMappingURL=service-util.js.map