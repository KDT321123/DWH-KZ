"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const artifact_management_base_1 = require("@sap/artifact-management-base");
const CapDbModuleGenerator_1 = __importDefault(require("./CapDbModuleGenerator"));
const CapServiceModuleGenerator_1 = __importDefault(require("./CapServiceModuleGenerator"));
const CapUIDeployerGenerator_1 = __importDefault(require("./CapUIDeployerGenerator"));
const CapDestinationModuleGenerator_1 = require("./CapDestinationModuleGenerator");
const CapLaunchpadGenerator_1 = __importDefault(require("./CapLaunchpadGenerator"));
class CapProjectGenerator {
    getType() {
        return artifact_management_base_1.ProjectType.CAP;
    }
    provideResources(context) {
        return [{
                name: context.nameFactory.serviceInstanceName('db'),
                service: artifact_management_base_1.ServiceCatalog.hana.name,
                plan: artifact_management_base_1.ServiceCatalog.hana.plan,
                type: artifact_management_base_1.ServiceType.CF_MANAGED_SERVICE,
            },
            {
                name: context.nameFactory.serviceInstanceName('html5-apps-repo', 'host'),
                service: artifact_management_base_1.ServiceCatalog.html5_apps_repo_host.name,
                plan: artifact_management_base_1.ServiceCatalog.html5_apps_repo_host.plan,
                type: artifact_management_base_1.ServiceType.CF_MANAGED_SERVICE,
                createDestination: true,
                config: {
                    destination: {
                        type: artifact_management_base_1.DestinationType.DEST_TO_SERVICE_INSTANCE,
                    },
                },
            },
            {
                name: context.nameFactory.serviceInstanceName('html5-apps-repo', 'runtime'),
                service: artifact_management_base_1.ServiceCatalog.html5_apps_repo_runtime.name,
                plan: artifact_management_base_1.ServiceCatalog.html5_apps_repo_runtime.plan,
                type: artifact_management_base_1.ServiceType.CF_MANAGED_SERVICE,
            },
        ];
    }
    ;
    getModuleGenerators(context) {
        const moduleManifestGenerators = [
            new CapDbModuleGenerator_1.default(),
            new CapServiceModuleGenerator_1.default(),
            new CapDestinationModuleGenerator_1.CapDestinationModuleGenerator(),
            new CapLaunchpadGenerator_1.default(),
            new CapUIDeployerGenerator_1.default(),
        ];
        return moduleManifestGenerators;
    }
    async getProjectManifest(context) {
        const templatePath = __dirname + '/';
        return await artifact_management_base_1.MtaTemplate.build(templatePath, 'mta-cap-template.yaml', context);
    }
    ;
    requires() {
        return [];
    }
}
exports.default = CapProjectGenerator;
//# sourceMappingURL=CapProjectGenerator.js.map