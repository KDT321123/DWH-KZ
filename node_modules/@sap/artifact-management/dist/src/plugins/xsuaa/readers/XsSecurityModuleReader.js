"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const artifact_management_base_1 = require("@sap/artifact-management-base");
const InfoList_1 = require("../InfoList");
class XsSecurityModuleReader extends artifact_management_base_1.ModuleReader {
    constructor() {
        super(...arguments);
        this.matchConditions = {
            requiredFilePatterns: ['roles.roledefault'],
        };
        this.itemTags = [artifact_management_base_1.Tag.Item, artifact_management_base_1.Tag.XSUAA];
        this.itemReaders = [
            {
                matchConditions: {
                    requiredFilePatterns: ['roles.roledefault'],
                },
                types: [artifact_management_base_1.ItemType.UI5Application, artifact_management_base_1.ItemType.UI5Component, artifact_management_base_1.ItemType.UI5View],
                tags: this.itemTags,
                read: async (options) => this.readRoles(options),
            },
        ];
        this.tags = [artifact_management_base_1.Tag.Module, artifact_management_base_1.Tag.XSUAA];
    }
    getType() {
        return artifact_management_base_1.ModuleType.XsSecurity;
    }
    getDetectionMechanism() {
        return artifact_management_base_1.DetectionMechanism.IGNORE;
    }
    async readPackageJson(fs) {
        return await fs.readJson('package.json');
    }
    async readDefaultRoles(fs) {
        return await fs.readJson('roles.roledefault');
    }
    async read({ fs }) {
        const pack = await this.readPackageJson(fs);
        const module = {
            type: artifact_management_base_1.ModuleType.XsSecurity,
            name: pack.name,
            path: fs.relativeToRoot(),
            tags: this.tags,
        };
        /* istanbul ignore if */
        if (!pack.name) {
            module.info = { 'errors': [InfoList_1.InfoList.ERR_PACK_NAME_UNDEFINED] };
        }
        return module;
    }
    async readRoles({ fs }) {
        const items = [];
        const roles = await this.readDefaultRoles(fs);
        /* istanbul ignore next */
        for (const role of roles) {
            const item = {
                type: artifact_management_base_1.ItemType.SecurityRole,
                name: role.Name,
                ref: role.Name,
                path: fs.relativeToRoot('roles.roledefault'),
                tags: this.itemTags,
            };
            item.info = { 'description': role.Description };
            /* istanbul ignore if */
            if (!role.Name) {
                item.info = { 'errors': [InfoList_1.InfoList.ERR_ROLE_NAME_UNDEFINED] };
            }
            items.push(item);
        }
        return items;
    }
}
exports.default = XsSecurityModuleReader;
//# sourceMappingURL=XsSecurityModuleReader.js.map