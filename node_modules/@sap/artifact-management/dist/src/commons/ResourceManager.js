"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class ResourceManager {
    constructor() {
        this.resources = new Map();
    }
    register(resource) {
        let resourcesOfType = this.resources.get(resource.type);
        if (!resourcesOfType) {
            this.resources.set(resource.type, resourcesOfType = {});
        }
        if (resourcesOfType[resource.id])
            throw new Error(`Resource already registered ${resource.id}`);
        resourcesOfType[resource.id] = resource;
    }
    get(id, type) {
        const resourcesOfType = this.resources.get(type) || {};
        const resource = resourcesOfType[id];
        if (!resource)
            throw new Error(`Resource doesn't exists ${id}`);
        return resource.get();
    }
    findIfExists(filter, type) {
        const resourcesOfType = this.resources.get(type) || {};
        for (const resourceKey in resourcesOfType) {
            const resource = resourcesOfType[resourceKey];
            if (resource.type !== type)
                continue;
            const matchFunc = resource.match;
            if (matchFunc(filter)) {
                return this.get(resource.id, type);
            }
        }
        return undefined;
    }
    find(filter, type) {
        const result = this.findIfExists(filter, type);
        if (result)
            return result;
        else
            throw new Error(`No resource matches filter ${filter}`);
    }
}
exports.default = ResourceManager;
//# sourceMappingURL=ResourceManager.js.map