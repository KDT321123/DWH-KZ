"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validate = exports.validateUI5Version = exports.validateAppId = void 0;
const semver_1 = __importDefault(require("semver"));
const i18n_1 = require("../i18n");
/**
 * Validates the specified app id to ensure we do not create malformed documents.
 *
 * @param appId SAP application id (manifest.json>sap.app>id)
 * @throws Error with validation message, if the app id is not valid
 * @returns true, if app id is validated
 */
function validateAppId(appId) {
    if (!appId) {
        throw new Error(i18n_1.t('error.missingRequiredProperty', { propertyName: 'app.id' }));
    }
    const match = appId.match(/["]/);
    if (match) {
        throw new Error(i18n_1.t('error.disallowedCharacters', { propertyName: 'app.id', disallowedChars: `${match === null || match === void 0 ? void 0 : match.join()}` }));
    }
    return true;
}
exports.validateAppId = validateAppId;
/**
 * Validates by throwing if the specified version does not have a coercible semantic version.
 * Currently we have special handling for empty string and undefined otherwise see: https://github.com/npm/node-semver#coercion.
 * Example: 'snapshot-1.2.4' can be coerced to '1.2.4' and so is considered valid.
 *
 * @param version - the UI5 version string to validate
 * @returns - true if the specified UI5 version is considered valid
 */
function validateUI5Version(version) {
    if (version && semver_1.default.coerce(version) === null) {
        throw new Error(i18n_1.t('error.invalidUI5Version', { version }));
    }
    return true;
}
exports.validateUI5Version = validateUI5Version;
/**
 * Validates the specified ui5App.
 *
 * @param ui5App configuration object given to the generate method conataining everything required to generate a UI5 application
 * @returns true, if the ui5App is valid
 * @throws Error with validation message, if the ui5App is not valid
 */
function validate(ui5App) {
    var _a, _b, _c;
    return (validateAppId(ui5App.app.id) &&
        validateUI5Version((_a = ui5App.ui5) === null || _a === void 0 ? void 0 : _a.version) &&
        validateUI5Version((_b = ui5App.ui5) === null || _b === void 0 ? void 0 : _b.localVersion) &&
        validateUI5Version((_c = ui5App.ui5) === null || _c === void 0 ? void 0 : _c.minUI5Version));
}
exports.validate = validate;
//# sourceMappingURL=validators.js.map