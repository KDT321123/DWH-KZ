import type { Ui5App } from '../types';
/**
 * Validates the specified app id to ensure we do not create malformed documents.
 *
 * @param appId SAP application id (manifest.json>sap.app>id)
 * @throws Error with validation message, if the app id is not valid
 * @returns true, if app id is validated
 */
export declare function validateAppId(appId: string): boolean;
/**
 * Validates by throwing if the specified version does not have a coercible semantic version.
 * Currently we have special handling for empty string and undefined otherwise see: https://github.com/npm/node-semver#coercion.
 * Example: 'snapshot-1.2.4' can be coerced to '1.2.4' and so is considered valid.
 *
 * @param version - the UI5 version string to validate
 * @returns - true if the specified UI5 version is considered valid
 */
export declare function validateUI5Version(version: string | undefined): boolean;
/**
 * Validates the specified ui5App.
 *
 * @param ui5App configuration object given to the generate method conataining everything required to generate a UI5 application
 * @returns true, if the ui5App is valid
 * @throws Error with validation message, if the ui5App is not valid
 */
export declare function validate(ui5App: Ui5App): boolean;
//# sourceMappingURL=validators.d.ts.map