export interface Package {
    name: string;
    version?: string;
    description?: string;
    scripts?: Record<string, string>;
    dependencies?: Record<string, string>;
    devDependencies?: Record<string, string>;
    ui5?: {
        dependencies?: string[];
    };
}
export interface App {
    id: string;
    version?: string;
    title?: string;
    description?: string;
    baseComponent?: string;
    startFile?: string;
    localStartFile?: string;
    /**
     * Defines the template used by the generation tool
     */
    sourceTemplate?: {
        /**
         * Identifies the source template used to generate the application. Set to empty string if not provided.
         */
        id?: string;
        /**
         * Source template version. Set to empty string if not provided.
         */
        version?: string;
        /**
         * Source template tools id. Optional property. Will not be written to manifest.json if not provided
         */
        toolsId?: string;
    };
}
export declare type UI5Framework = 'SAPUI5' | 'OpenUI5';
export interface UI5 {
    framework: UI5Framework;
    frameworkUrl: string;
    minUI5Version: string;
    version: string;
    localVersion: string;
    typesVersion: string;
    descriptorVersion: string;
    ui5Libs: string | string[];
    ui5Theme: string;
}
export interface AppOptions {
    codeAssist: boolean;
    eslint: boolean;
    sapux: boolean;
    loadReuseLibs: boolean;
}
export interface Ui5App {
    app: App;
    appOptions?: Partial<AppOptions>;
    ui5?: Partial<UI5>;
    package: Package;
}
//# sourceMappingURL=types.d.ts.map