"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OdataVersion = exports.TableSelectionMode = exports.TableType = exports.ValidationError = exports.TemplateType = void 0;
var TemplateType;
(function (TemplateType) {
    TemplateType["Worklist"] = "worklist";
    TemplateType["ListReportObjectPage"] = "lrop";
    TemplateType["AnalyticalListPage"] = "alp";
    TemplateType["OverviewPage"] = "ovp";
    TemplateType["FormEntryObjectPage"] = "feop";
})(TemplateType = exports.TemplateType || (exports.TemplateType = {}));
/**
 * General validation error thrown if app config options contain invalid combinations
 */
class ValidationError extends Error {
    /**
     * ValidationError constructor.
     *
     * @param message - the error message
     */
    constructor(message) {
        super(`Validation error: ${message}`);
        this.name = this.constructor.name;
    }
}
exports.ValidationError = ValidationError;
var TableType;
(function (TableType) {
    TableType["GRID"] = "GridTable";
    TableType["ANALYTICAL"] = "AnalyticalTable";
    TableType["RESPONSIVE"] = "ResponsiveTable";
})(TableType = exports.TableType || (exports.TableType = {}));
var TableSelectionMode;
(function (TableSelectionMode) {
    TableSelectionMode["NONE"] = "None";
    TableSelectionMode["AUTO"] = "Auto";
    TableSelectionMode["MULTI"] = "Multi";
    TableSelectionMode["SINGLE"] = "Single";
})(TableSelectionMode = exports.TableSelectionMode || (exports.TableSelectionMode = {}));
// We need this for the service version
var odata_service_writer_1 = require("@sap-ux/odata-service-writer");
Object.defineProperty(exports, "OdataVersion", { enumerable: true, get: function () { return odata_service_writer_1.OdataVersion; } });
//# sourceMappingURL=types.js.map